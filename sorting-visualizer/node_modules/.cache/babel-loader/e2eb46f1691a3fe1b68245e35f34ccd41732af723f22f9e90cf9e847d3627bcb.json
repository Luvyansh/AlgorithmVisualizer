{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anurag Pandey\\\\Documents\\\\Projects\\\\sorting-visualizer\\\\src\\\\SortingVisualizer\\\\SortingVisualizer.jsx\";\nimport React from \"react\";\nimport * as SortingAlgorithms from \"../SortingAlgorithms/SortingAlgorithms\";\nimport './SortingVisualizer.css';\nimport { set } from \"mongoose\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n  componentDidMount() {\n    this.resetArray();\n  }\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < 150; i++) {\n      array.push(randomIntFromInterval(5, 750));\n    }\n    this.setState({\n      array\n    });\n  }\n  mergeSort() {\n    const animations = SortingAlgorithms.mergeSort(this.state.array);\n    const newAnimations = [];\n    for (const animation of animations) {\n      newAnimations.push(animation.comparison);\n      newAnimations.push(animation.comparison);\n      newAnimations.push(animation.swap);\n    }\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, barTwoIdx] = newAnimations[i];\n      const barOneStyle = arrayBars[barOneIdx].style;\n      const barTwoStyle = arrayBars[barTwoIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const color = i % 3 === 0 ? 'linear-gradient(180deg, #6DD5FA, #2980B9)' : 'linear-gradient(180deg, #FF7A89, #C1666B)';\n        setTimeout(() => {\n          barOneStyle.background = color;\n          barTwoStyle.background = color;\n        }, i * 10);\n      } else {\n        setTimeout(() => {\n          const tempHeight = barOneStyle.height;\n          barOneStyle.height = barTwoStyle.height;\n          barTwoStyle.height = tempHeight;\n        }, i * 10);\n      }\n    }\n  }\n  quickSort() {}\n  heapSort() {}\n  bubbleSort() {}\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-container\",\n        children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: `${value}px`\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"generate-array\",\n        onClick: () => this.resetArray(),\n        children: \"Generate New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"sort-button\",\n        onClick: () => this.mergeSort(),\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"sort-button\",\n        onClick: () => this.quickSort(),\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"sort-button\",\n        onClick: () => this.heapSort(),\n        children: \"Heap Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"sort-button\",\n        onClick: () => this.bubbleSort(),\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// function arraysAreEqual(array1, array2) {\n//     if (array1.length !== array2.length) return false;\n//     for (let i = 0; i < array1.length; i++) {\n//         if (array1[i] !== array2[i]) return false;\n//     }\n//     return true;\n// }","map":{"version":3,"names":["React","SortingAlgorithms","set","jsxDEV","_jsxDEV","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","mergeSort","animations","newAnimations","animation","comparison","swap","length","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","isColorChange","color","setTimeout","background","tempHeight","height","quickSort","heapSort","bubbleSort","render","children","className","map","value","idx","fileName","_jsxFileName","lineNumber","columnNumber","class","onClick","min","max","Math","floor","random"],"sources":["C:/Users/Anurag Pandey/Documents/Projects/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport * as SortingAlgorithms from \"../SortingAlgorithms/SortingAlgorithms\";\r\nimport './SortingVisualizer.css';\r\nimport { set } from \"mongoose\";\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i=0; i < 150; i++)\r\n        {\r\n            array.push(randomIntFromInterval(5,750));\r\n        }\r\n        this.setState({array});\r\n    }\r\n\r\n    mergeSort() {\r\n        const animations = SortingAlgorithms.mergeSort(this.state.array);\r\n        const newAnimations = [];\r\n        for (const animation of animations) {\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.swap);\r\n        }\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [barOneIdx, barTwoIdx] = newAnimations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            const isColorChange = i % 3 !== 2;\r\n            if (isColorChange) {\r\n                const color = i % 3 === 0 ? 'linear-gradient(180deg, #6DD5FA, #2980B9)' : 'linear-gradient(180deg, #FF7A89, #C1666B)';\r\n                setTimeout(() => {\r\n                    barOneStyle.background = color;\r\n                    barTwoStyle.background = color;\r\n                }, i * 10);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const tempHeight = barOneStyle.height;\r\n                    barOneStyle.height = barTwoStyle.height;\r\n                    barTwoStyle.height = tempHeight;\r\n                }, i * 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    quickSort() {}\r\n\r\n    heapSort() {}\r\n\r\n    bubbleSort() {}\r\n    render() {\r\n        const {array} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"array-container\">\r\n                    {array.map((value, idx) => (\r\n                        <div className=\"array-bar\" key={idx} style={{height:`${value}px`}}>\r\n                            {/* {value} */}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button class=\"generate-array\" onClick={() => this.resetArray()}>Generate New Array</button>\r\n                <button class=\"sort-button\" onClick={() => this.mergeSort()}>Merge Sort</button>\r\n                <button class=\"sort-button\" onClick={() => this.quickSort()}>Quick Sort</button>\r\n                <button class=\"sort-button\" onClick={() => this.heapSort()}>Heap Sort</button>\r\n                <button class=\"sort-button\" onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n// function arraysAreEqual(array1, array2) {\r\n//     if (array1.length !== array2.length) return false;\r\n//     for (let i = 0; i < array1.length; i++) {\r\n//         if (array1[i] !== array2[i]) return false;\r\n//     }\r\n//     return true;\r\n// }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}